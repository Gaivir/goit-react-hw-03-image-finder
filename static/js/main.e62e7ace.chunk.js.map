{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","App.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","services/imgs-api.js","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","formReset","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","imgId","imgName","webFormatImg","largeImage","openModal","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","id","name","webformatURL","largeImageURL","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","onClose","handlOverlayClick","target","window","addEventListener","removeEventListener","children","createPortal","Overlay","Button","Spinner","color","height","width","App","showModal","isLoading","scrollTo","top","documentElement","scrollHeight","behavior","onChangeQuery","fetchImgs","options","imgsApi","prevState","finally","getElem","imgModal","prevProps","PrevState","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e62e7ace.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__39iig\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2o1cz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2mz2_\",\"Modal\":\"Modal_Modal__322FI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2ouuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2b7kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Rgd3\"};","import axios from 'axios';\r\n\r\nconst fetchImgs = ({ searchQuery = '', currentPage = 1 }) => {\r\n    return axios\r\n        .get(\r\n            `https://pixabay.com/api/?key=20760702-5249c5293b61b59f393da4efc&q=${searchQuery}&image_type=photo&orientation=horizontal&per_page=12&page=${currentPage}`\r\n        )\r\n        .then(response => response.data.hits);\r\n};\r\n\r\n\r\nexport default { fetchImgs };","import React, { Component } from 'react';\r\nimport styles from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query:\"\",\r\n    }\r\n\r\n\r\n\r\n\r\n// 1. Звязуємо наш текст в стейті з даними що ввів користувач\r\n    handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  }\r\n    \r\n// 2. Сабмітимо форму дані, що ввів користувача записуємо в пропс onSubmit і скидуємо пошук Reset\r\n      handleSubmit = event => {\r\n    event.preventDefault();\r\n         this.props.onSubmit(this.state.query);\r\n          this.formReset();\r\n         \r\n    }\r\n    \r\n// 3. Скидає пошук від даних користувача\r\n    formReset = () => {\r\n        this.setState({\r\n            query: '',\r\n           \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n        <header className={styles.Searchbar}>\r\n  <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n    <button type=\"submit\" className={styles.SearchFormButton}>\r\n      <span className={styles.SearchFormButtonLabel}>Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className={styles.SearchFormInput}\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n    placeholder=\"Search images and photos\"\r\n    value={this.state.query}\r\n    onChange={this.handleChange}\r\n    />\r\n  </form>\r\n</header>\r\n)\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ imgId, imgName, webFormatImg,largeImage,openModal}) => (\r\n    \r\n  <li key={imgId}\r\n    onClick={() => { openModal(largeImage); }}\r\n    className={styles.ImageGalleryItem}>\r\n    <img src={webFormatImg}\r\n      alt={imgName}\r\n      className={styles.ImageGalleryItemImage} /></li>\r\n);\r\n \r\n\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imgId: PropTypes.string.isRequired,\r\n      imgName: PropTypes.string.isRequired,\r\n      webFormatImg: PropTypes.string.isRequired,\r\n      largeImage: PropTypes.string.isRequired,\r\n      openModal:PropTypes.func.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGalleryItem;","\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport styles from './ImageGallery.module.css';\r\n\r\n\r\n\r\nconst ImageGallery = ({ images, onClick}) => (\r\n  <ul className={styles.ImageGallery}>\r\n    {images.map(({ id, name, webformatURL,largeImageURL}) => (\r\n      <ImageGalleryItem\r\n        imgId={id}\r\n        imgName={name}\r\n        webFormatImg={webformatURL}\r\n         largeImage={largeImageURL}\r\n        openModal={onClick}\r\n      />))}\r\n   </ul>\r\n)\r\n\r\n\r\n\r\n\r\nexport default ImageGallery;","import { Component } from 'react';\r\nimport styles from './Modal.module.css'\r\nimport { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n class Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount');\r\n\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n                console.log(\"Нажали ESC\");\r\n\r\n                this.props.onClose();\r\n            }\r\n    }\r\n\r\n    handlOverlayClick = event => {\r\n        console.log('кликнули в оверлей');\r\n\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return createPortal(\r\n <div className={styles.Overlay} onClick={this.handlOverlayClick}>\r\n                <div className={styles.Modal}>\r\n    {children}\r\n    \r\n  </div>\r\n    </div>, modalRoot)\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Modal;","import styles from './Button.module.css'\r\n\r\nconst Button = ({onClick}) => {\r\n    return (\r\n        <button className={styles.Button} type='button' onClick={onClick}>Load more</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import Loader from \"react-loader-spinner\";\r\nimport { Component } from \"react\";\r\n\r\n class Spinner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader type=\"Audio\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import { Component } from \"react\";\nimport imgsApi  from './services/imgs-api';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport styles from './App.module.css';\n\nimport ImageGallery from './Components/ImageGallery/ImageGallery'\nimport Modal from './Components/Modal/Modal';\nimport Button from './Components/Button/Button';\nimport Spinner from './Components/Loader/Loader';\n\n\nclass App extends Component {\n  state = {\n    images: [],\n    showModal: false,\n    webformatURL: '',\n    largeImageURL: '',\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n  }\n\n \n  \n  componentDidUpdate(prevProps, PrevState) {\n    if (PrevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImgs();\n     \n      \n    }\n     this.scrollTo();\n  }\n\n  scrollTo = () => {\n   window.scrollTo({\n  top: document.documentElement.scrollHeight,\n  behavior: 'smooth',\n});\n   }\n  \n  \n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n    })\n  };\n\n  fetchImgs = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n    this.setState({ isLoading: true });\n\n    imgsApi.fetchImgs(options)\n      .then(images => { this.setState(prevState => ({ images: [...prevState.images, ...images], currentPage: prevState.currentPage + 1, })) }).finally(()=>this.setState({isLoading:false}));\n   \n  }\n \n getElem = (largeImageURL) => {\n    this.setState({largeImageURL})\n    this.imgModal();\n  }\n\n\n  \n  imgModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal\n    }))\n  };\n  \n   \n  \n  \n  \n  \n  render() {\n    // const visibleContacts = this.getVisibleContacts();\n    const { images, showModal, largeImageURL,isLoading } = this.state;\n    \n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={this.onChangeQuery}/>\n        {showModal &&\n          <Modal onClose={this.imgModal}>\n          <img src={largeImageURL} alt='foto' />\n          </Modal> }\n        <ImageGallery\n          images={images}\n          onClick={this.getElem}\n        />\n        {images.length > 0 && <Button\n          onClick={this.fetchImgs} />}\n\n        {isLoading && <Spinner />}\n\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3f2Vg\",\"SearchForm\":\"Searchbar_SearchForm__12F8j\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1asCB\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2jzfC\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2tC6e\",\"SearchForm-input\":\"Searchbar_SearchForm-input__2nW_I\"};"],"sourceRoot":""}